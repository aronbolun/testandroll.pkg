# Profit Maximizing Marketing Experiments
# Examples for paper using the normal normal model
# Elea McDonnell Feit, eleafeit@gmail.com
# 4 June 2018

setwd("~/repos/profit_max_experiments")
source("nn_functions.R")

# ===== Tests =====
# Check that symmetric and asymmetric versions of expected profit are the same
(sym <- exp_profit_nn(10, 10, 100, 1, 1, 1))
(asym <- exp_profit_nn(10, 10, 100, 1, 1, 1, 1, 1, 1))
(sym <- exp_profit_nn(10, 10, 100, 10, 1, 1))
(asym <- exp_profit_nn(10, 10, 100, 10, 1, 1, 10, 1, 1))
(sym <- exp_profit_nn(10, 10, 100, 1, 1, 10))
(asym <- exp_profit_nn(10, 10, 100, 1, 1, 10, 1, 1, 10))

# Check that simulated expected profit matches the formula
(closed <- exp_profit_nn(10, 10, 100, 10, 1, 1, 10, 1, 1))
sim <- profit_nn_sim(1000000, 10, 10, 100, 10, 1, 1, 10, 1, 1, draws=TRUE)
sim$summary
hist(sim$draws$profit, freq=FALSE, 
     main="Normal-Normal Model Distribution of Simulated Profits", 
     xlab="Profit", ylab="Density")
text(200, 0.0037, pos=4, paste("Exp. Profit (closed form) = ", round(closed$exp_profit, 2), sep=""))
text(200, 0.004, pos=4, paste("Exp. Profit (simulated) = ", round(sim$summary$exp_profit, 2), sep=""))
abline(v=closed$exp_profit, col="gray", lty=5)
abline(v=sim$summary$exp_profit)

# Check that optimal sample size forumla matches complete enumeration
which.max(exp_profit_nn(1:49, 1:49, 100, 10, 1, 1)$exp_profit)
test_size_nn(100, 10, 1)

dnorm(# ===== Examples for paper =====
options(scipen=10)  # limits use of scientific notation
mypath <- "~/repos/profit_max_experiments/nn_examples/"
# parameters for profit-max
sd_y <- 5 #1.5
pr_mu <- log(10) # population mean centered at sales of 10
pr_sigma <- 0.3 # 
n <- 100000
# parameters for NHST 
power <- 0.8 # high likelihood of detecting difference
sig <- 0.05  # type I errors do not matter in this context
qnorm(sig) + qnorm(power)
#(delta_NHST <- 2*pr_sigma/sqrt(pi)) # average difference
(delta_NHST<- qnorm(0.60, mean=0, sd = sqrt(2*pr_sigma^2))) # 20th percentile of prior dist of abs(mu_1 - pr_mu)

# --- Priors (Inputs)
mus <- (((pr_mu - 3 * pr_sigma)*100):((pr_mu + 3 * pr_sigma)*100))/100
pdf(paste(mypath, "nnEx1PriorTreatmentMeansLog.pdf", sep=""), width=5, height=5)
plot(mus, dnorm(mus, mean=pr_mu, sd=pr_sigma), type="l", 
     xlab="Log Customer Sales", ylab="Prior Density", 
     main=expression(paste("Prior Density for Treatment Mean ", mu[1], ",", mu[2], sep="")))
dev.off()

diffs <- ((-3*sqrt(2)*pr_sigma*100):(3*sqrt(2)*pr_sigma*100))/100
pdf(paste(mypath, "nnEx1PriorTreatmentDiffLog.pdf", sep=""), width=5, height=5)
plot(diffs, dnorm(diffs, mean=0, sd=sqrt(2)*pr_sigma), type="l",
     xlab="Log Difference in Treatment Means (lift)",
     ylab="Prior Density", 
     main=expression(paste("Prior Density for Difference in Treatment Means ", mu[1], "-", mu[2])))
dev.off()

pdf(paste(mypath, "nnEx1PriorResponseLog.pdf", sep=""), width=5, height=5)
plot(density(rnorm(1000000, mean=rnorm(1000000, mean=pr_mu, sd=pr_sigma), sd=sd_y)), 
     xlab="Log Customer Sales", 
     ylab="Prior Density",
     main=expression(paste("Prior Density for Response ",  y[1], ",", y[2])))
dev.off()

draws <- exp(rnorm(1000000, mean=pr_mu, sd=sd_y))
summary(draws)
draws <- draws[draws > quantile(draws, p=0.01) & draws < quantile(draws, p=0.75)]
pdf(paste(mypath, "nnEx1ResponseDist.pdf", sep=""), width=5, height=5)
plot(density(draws), xlim=c(0,100),
     xlab="Customer Sales", 
     ylab="Prior Density", 
     main=expression(paste("Prior Density of Response ", e^y[1], ",", e^y[2], " at Prior Mean ", mu[0])))
dev.off()

draws <- exp(rnorm(1000000, mean=rnorm(1000000, mean=pr_mu, sd=pr_sigma), sd=sd_y))
summary(draws)
draws <- draws[draws > quantile(draws, p=0.01) & draws < quantile(draws, p=0.75)]
pdf(paste(mypath, "nnEx1PriorResponse.pdf", sep=""), width=5, height=5)
plot(density(draws), xlim=c(0,100), 
     xlab="Customer Sales", 
     ylab="Prior Density", 
     main=expression(paste("Prior Distribution for Response ", e^y[1], ", ", e^y[2], sep="")))
dev.off()


# --- Expected profit and sample size (Outputs)
(n_1 <- test_size_nn(n, sd_y, pr_sigma))
(max_profit <- exp_profit_nn(n_1, n_1, n, sd_y, pr_mu, pr_sigma))
max_profit$exp_inc_profit/n  # incremental profit over choosing randomly
(n_NHST <- power.t.test(delta=delta_NHST, sd=sd_y, sig.level = sig, power=power)$n)
(NHST_profit <- exp_profit_nn(n_NHST, n_NHST, n, sd_y, pr_mu, pr_sigma))
(max_profit$exp_inc_profit - NHST_profit$exp_inc_profit)/max_profit$exp_inc_profit
perfect_info <- n*(pr_mu + pr_sigma/sqrt(pi))
(max_profit$exp_profit - pr_mu*n)/(perfect_info - pr_mu*n)

# Contour plot of expected profit
pts <- seq(0, n/5, by=round(n/(5*200), 0))
exp_profit <- matrix(NA, nrow=length(pts), ncol=length(pts))
for (i in 1:length(pts)) {
    exp_profit[i,] <- exp_profit_nn(pts[i], pts, n, sd_y, pr_mu, pr_sigma)$exp_profit
}
exp_profit[1,1] <- pr_mu*n
pdf(paste(mypath, "nnEx1ExpProfitContour.pdf", sep=""), width=5, height=5)
contour(x = pts, y=pts, z=exp_profit, nlevels=50, 
        main="Expected Total Profit", 
        xlab=expression(paste("Group 1 Size (", n[1], ")", sep="")),  
        ylab=expression(paste("Group 2 Size (", n[2], ")", sep="")))
#abline(h=n_1, v=n_1, col="darkorange")
dev.off()

# Line plot of expected profit
pdf(paste(mypath, "nnEx1ExpProfitSymmetric.pdf", sep=""), width=5, height=5)
plot(x=2*pts, y=diag(exp_profit), type="l", xlim=c(0, pts[length(pts)]),
     ylim=c(exp_profit[1,1], perfect_info+1000),
     main="Expected Total Profit (equal groups)", 
     ylab="Expected Total Profit", 
     xlab=expression(paste("Test Size (",  n[1], "+", n[2], ")", sep="")))
abline(v=2*n_1, col="darkorange")
# abline(h=max_profit$exp_profit, col="darkorange")
abline(h=perfect_info, col="darkgreen", lty=2) 
abline(h=exp_profit[1,1], col="darkgreen", lty=2)
text(x=2*n_1, y=pr_mu*n*1.03, paste("Profit-Max Test Size = ", round(2*n_1,0), sep=""), col="darkorange", pos=4)
text(x=13000, y=perfect_info-1000, "Perfect Information", col="darkgreen")
text(x=13000, y=exp_profit[1,1] +1000, "Choose Randomly", col="darkgreen")
dev.off()

# --- Vary n
sens <- data.frame(n=c(1:9*100, 1:100*10000)) # always use 100 support points to maintain label locations
sens$test_size <- 2*test_size_nn(sens$n, sd_y, pr_sigma)
sens$exp_profit = exp_profit_nn(sens$test_size/2, sens$test_size/2, sens$n, sd_y, pr_mu, pr_sigma, detail=FALSE)
sens$test_size_NHST <- 2*n_NHST
sens$exp_profit_NHST <- exp_profit_nn(sens$test_size_NHST/2, sens$test_size_NHST/2, sens$n, sd_y, pr_mu, pr_sigma)
summary(sens)

pdf(paste(mypath, "nnEx1TestSizeSensitivity_n.pdf", sep=""), width=5, height=5)
plot(test_size ~ n, type="l", data=sens, 
     ylim=c(0, max(sens$test_size, max(sens$test_size_NHST))), col="darkorange",
     xlab="Population Size (n)", 
     ylab=expression(paste("Test Size (", n[1], " + ", n[2], ")", sep="")),  
     main="Test Size Sensitivity to Population Size")
text(x=sens$n[70], y=sens$test_size[70], "Profit Max", 
     pos=1, col="darkorange")
points(test_size_NHST ~ n, data=sens, lty=5, col="turquoise3", type="l")
text(x=sens$n[50], y=sens$test_size_NHST[50], pos=1,"Standard", col="turquoise3")
abline(v=n, col="gray")
dev.off()

pdf(paste(mypath, "nnEx1ExpProfitSensitivity_n.pdf", sep=""), width=5, height=5)
plot(exp_profit/n ~ n, data=sens, type="l", col="darkorange", 
     ylim=c(pr_mu, max((sens$exp_profit/sens$n)*1.03, 0)), 
     main="Expected Total Response at Optimal Test Size", 
     xlab="Population Size (n)", 
     ylab="Expected Response Per Customer (log sales)")
text(x=sens$n[60], y=sens$exp_profit[60]/sens$n[60], "Max Expected Profit", 
     pos=3, col="darkorange")
points(exp_profit_NHST/n ~ n, type="l", lty=5, col="turquoise3", data=sens)
text(x=sens$n[70], y=sens$exp_profit_NHST[70]/sens$n[70], col="turquoise3",  
       pos=1, "Standard")
abline(v=n, col="gray")
dev.off()

# --- Vary pr_sigma
sens <- data.frame(pr_sigma = 1:100/100)
sens$test_size <- 2*test_size_nn(n, sd_y, sens$pr_sigma)
sens$exp_profit = exp_profit_nn(sens$test_size/2, sens$test_size/2, n,
                                  sd_y, pr_mu, sens$pr_sigma)
sens$delta_NHST <- qnorm(0.60, mean=0, sd = sqrt(2*sens$pr_sigma^2))
sens$test_size_NHST <- rep(NA, nrow(sens))
for (i in 1:nrow(sens)) { 
  sens$test_size_NHST[i] <- 2*power.t.test(delta=sens$delta_NHST[i], sd=sd_y, sig.level = sig, power=power)$n
}
sens$exp_profit_NHST <- exp_profit_nn(sens$test_size_NHST/2, sens$test_size_NHST/2, n,
                                      sd_y, pr_mu, sens$pr_sigma)
summary(sens)

pdf(paste(mypath, "nnEx1TestSizeSensitivity_pr_sigma.pdf", sep=""), width=5, height=5)
plot(test_size ~ pr_sigma, type="l", data=sens, 
     ylim=c(0, min(n, max(sens$test_size, sens$test_size_NHST))),
     xlab=expression(paste("St Dev of Prior on Population Means (", sigma[0], ")", sep="")),  
     ylab=expression(paste("Test Size (", n[1], " + ",  n[2], ")", sep="")),  
     main="Test Size Sensitivity to Prior Uncertainty", col="darkorange")
text(x=sens$pr_sigma[50], y=2*sens$test_size[50], 
     "Profit Max", pos=3, col="darkorange")
points(test_size_NHST ~ pr_sigma, type="l", lty=5, col="turquoise3", data=sens)
text(x=sens$pr_sigma[30], y=sens$test_size_NHST[30], pos=4, col="turquoise3",
     expression(paste("Standard (assuming delta scales with ", sigma[0], ")", sep="")))
abline(v=pr_sigma, col="gray")
dev.off()

pdf(paste(mypath, "nnEx1ExpProfitSensitivity_pr_sigma.pdf", sep=""), width=5, height=5)
plot(exp_profit/n ~ pr_sigma, data=sens, type="l", col="darkorange", 
     ylim=c(min(sens$exp_profit/n, sens$exp_profit_NHST/n), max(sens$exp_profit/n, sens$exp_profit_NHST/n)), 
     main="Expected Profit", 
     xlab=expression(paste("Standard Deviation of Prior on Population Mean (" , sigma[0], ")", sep="")), 
     ylab="Expected Response Per Customer (log sales)")
text(x=sens$pr_sigma[50], y=sens$exp_profit[50]/n, 
     "Max Expected Profit", pos=2, col="darkorange")
points(exp_profit_NHST/n ~ pr_sigma, data=sens, type="l", lty=5, col="turquoise3")
text(x=sens$pr_sigma[40], y=sens$exp_profit_NHST[40]/n, 
       pos=4, "Standard", col="turquoise3")
abline(h=pr_mu, col="gray")
dev.off()

# --- Vary sd_y
sens <- data.frame(sd_y = c(0.05, 1:100/10)) 
sens$test_size <- 2*test_size_nn(n, sens$sd_y, pr_sigma)
sens$exp_profit = exp_profit_nn(sens$test_size/2, sens$test_size/2, n,
                                sens$sd_y, pr_mu, pr_sigma)
sens$test_size_NHST <- rep(NA, nrow(sens))
for (i in 1:nrow(sens)) {
  sens$test_size_NHST[i] <- 2*power.t.test(delta=delta_NHST, sd=sens$sd_y[i], sig=sig, power=power)$n 
}
sens$exp_profit_NHST <- exp_profit_nn(sens$test_size_NHST/2, sens$test_size_NHST, n,
                                      sens$sd_y, pr_mu, pr_sigma)
summary(sens)

pdf(paste(mypath, "nnEx1TestSizeSensitivity_sd_y.pdf", sep=""), width=5, height=5)
plot(test_size ~ sd_y, type="l", data=sens, col="darkorange", 
     ylim=c(0, min(n, max(test_size, test_size_NHST))),
     xlab=expression(paste("Standard Deviation of Response (", sigma, ")", sep="")),  
     ylab=expression(paste("Test Size (", n[1], " + ", n[2], ")", sep="")),  
     main="Test Size Sensitivity to St Dev in Response")
text(x=sens$sd_y[70], y=sens$test_size[70], 
     "Profit Max", pos=1, col="darkorange")
points(test_size_NHST ~ sd_y, data=sens, type="l", lty=5, col="turquoise3")
text(x=sens$sd_y[50], y=sens$test_size_NHST[50], pos=4,"Standard", col="turquoise3")
abline(v=sd_y, col="gray")
dev.off()

pdf(paste(mypath, "nnEx1ExpProfitSensitivity_sd_y.pdf", sep=""), width=5, height=5)
plot(exp_profit/n ~ sd_y, data=sens, type="l", col="darkorange", 
     ylim=c(pr_mu, max(exp_profit/n)),
     main="Expected Profit", 
     xlab=expression(paste("Standard Deviation of Response (", sigma, ")", sep="")), 
     ylab="Expected Profit Per Customer (log sales)")
text(x=sens$sd_y[60], y=sens$exp_profit[60]/n, 
     "Max Expected Profit",  pos=3, col="darkorange")
points(exp_profit_NHST/n ~ sd_y, data=sens, type="l", lty=5, col="turquoise3")
text(x=sens$sd_y[70], y=sens$exp_profit_NHST[70]/n, 
       pos=3, "Standard", col="turquoise3")
dev.off()

