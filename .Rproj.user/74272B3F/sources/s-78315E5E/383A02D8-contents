---
title: "test&rollvignette"
author: "Maxine Fang"
output:
  html_document: default
  pdf_document: default
---
## Test and Roll Vignette

## 1. Introduction
### 1.1 About Test & Roll
Test & Roll (tactical A/B testing) describes an experimentation process in marketing where a subset of customers are randomly assigned to a treatment and customer response data is first collected in a "test" stage. In the "roll" stage that follows, marketers deploy one treatment to all remaining customers based on the test results.<br/>  
Marketers often use A/B testing as a tool to compare marketing treatments in a test stage and then deploy the better-performing treatment to the remainder of the consumer population. While these tests have traditionally been analyzed using hypothesis testing, we re-frame them as an explicit trade-off between the opportunity cost of the test (where some customers receive a sub-optimal treatment) and the potential losses associated with deploying a sub-optimal treatment to the remainder of the population is deployed.<br/>  
Profit-maximizing Test & Roll has several advantages over traditional hypothesis testing.  
(1) The typical significance levels (alpha) in hypothesis test which aim to limit Type I errors have little consequence for profit, assuming no deployment costs. If the null is mistakenly rejected, but both treatments yield identical effects, the same profit will be earned regardless of which treatment is deployed. Because of the profit trade-off between test-stage learning and roll-stage earning, conservative sample sizes based on null hypothesis testing lower overall expected profit, by exposing too many people to the less effective treatment in the test.  
(2) The population available for testing and deploying is often limited, but the recommended sample size does not take this constraint into account. In online advertising experiments where effects are often small (but profitable), the recommended sample size may be larger than the size of the population itself. Yet when the population is limited, smaller tests that will never reach statistical significance can still have substantial benefit in improving expected profit.  With profit-maximizing test & roll, improved performance is achieved because profit-maximizing tests identify the best performing
treatment with high probability when treatment effects are large; the lost profit (regret) from errors in treatment selection is small when treatment effects are small.<br/>    
The Test & Roll package can be used to calculate test sizes as well as resulting profits under a variety of methods (hypothesis testing, profit-maximization, and Thomson Sampling). Note that the profit-maximizing test size is substantially smaller than typically recommended for a hypothesis test, particularly when the response is noisy or when the total population is small. 

### 1.2 Installation
```{r}
library(devtools)
install_github('mfang17/testandroll.pkg')
library(testandroll.pkg)
```

### 1.3 Computing priors from data
**Basic method:**  
"mu" - take means of the mean responses from the data sets  
"sigma" - take standard deviation of the mean responses from the data sets  
**Updating beliefs**  
"mu" - take means of the mean responses from the data sets  
"sigma" - Bayes rule?  

### 1.4 Summary of functions
**Function parameters:**  
"n" - sample sizes  
"N" - total deployment population  
"s" - the known standard deviations of the outcome   
"mu" - means of the priors on the response   
"sigma" - standard deviations of the priors on the response   
"K" - number of arms (treatments)  
"R" - number of simulation repetitions  
"n_vals" - possible sample size values  
<br/>
**Function purposes:**  
**Section 2) Usage for 2-arm tests**  
test_size_nht() - computes test sizes under hypothesis testing 
test_size_nn() - computes profit-maximizing test sizes under test & roll   
profit_nn() - computes profit under profit-maximizing tests  
proft_perfect_nn() - computes profit under perfect assumptions  
error_rate_nn() - computes rate of incorrect deployments  
<br/>
**Section 3) Usage for K-arm tests (with simulation)**   
test_size_nn_sim() - computes profit-maximizing test sizes for a multi-armed test & roll  
one_rep_test_size() - utility function used in test_size_nn_sim() to simulate one set of potential outcomes  
profit_nn_sim() -  computes the per-customer profit for test & roll with K arms  
one_rep_profit() -utility function used in function 'profit_nn_sim()' to simulate one set of potential outcomes  
test_eval_nn() - provides summary statistics of a test & roll plan  
<br/>
**Section 4) Visualizing prior effects on profits and mean response**   
plot_prior_mean_resp_nn() - plot prior densities against mean response (profit per customer)  
plot_prior_resp_nn() - plot prior densities against response (profit per customer)  
plot_prior_effect_nn() - plot prior densities against treatment effect (difference in profit per customer)  

## 2. Usage for 2-arm tests
### 2.1 Computing profit-maximizing test sizes (2-arm tests)
test_size_nht() computes test sizes under hypothesis testing.
```{r}
test_size_nht(s=c(5,10), d=5, conf=0.95, power=0.8, N=NULL)
```

It takes in parameters:  
"s" - vector of length 1 (symmetric) or 2 (asymmetric) indicating response standard deviation(s)  
"d" - minimum detectable difference between treatments  
"conf" - 1 - type I error rate  
"power" - 1 - type II error rate  
"N" - finite deployment population, if NULL no finite population correction is used  
and returns a vector containing the recommended sample sizes.  

<br/>
```{r}
test_size_nn(N=1000, s=20, mu=c(50,50), sigma=c(10,10))
```

test_size_nn() computes the profit-maximizing test size for test & roll with 2 arms   
It takes in parameters:  
"N" - size of deployment population  
"s" - vector of length 2 containing the standard deviations of the outcome  
"mu" - vector of length 2 containing the means of the prior on the mean response  
"sigma" vector of length 2 containing the standard deviations of the prior on the mean response  
and returns a vector containing the sample sizes.

### 2.2 Computing profits and errors under different testing methods (2-arm tests)
profit_nn()
<br/>
profit_perfect_nn()
<br/>
error_rate_nn()

## 3. Usage for K-arm tests (with simulation)
### 3.1 Computing profit-maximizing test sizes (K-arm tests) with simulation
test_size_nn_sim() #asymmetric case not supported atm
<br/>
one_rep_test_size() (utility function)

### 3.2 Computing profits and errors under different testing methods (K-arm tests) with simulation
profit_nn_sim() 
<br/>
one_rep_profit() (utility function)
<br/>
test_eval_nn()

## 4. Visualizing prior effects on profits and mean response
plot_prior_mean_resp_nn() plots prior densities against mean response (profit per customer)  
```{r}
#plot_prior_mean_resp_nn(mu=c(5,10), sigma=c(10,10))
```
It takes in as parameters:  
"mu" - means of the prior on the mean response  
"sigma" - standard deviations of the priors on the response   
<br/>

plot_prior_resp_nn() plot prior densities against response (profit per customer)  
```{r}
#plot_prior_resp_nn(s=c(10,20), mu=c(5,10), sigma=c(10,10))
```
It takes in as parameters:  
"s" - the known standard deviations of the outcome
"mu" - means of the prior on the mean response  
"sigma" - standard deviations of the priors on the response  
<br/>

plot_prior_effect_nn() plots prior densities against treatment effect (difference in profit per customer)   
```{r}
#plot_prior_effect_nn(mu=c(5,10), sigma=c(10,10), abs=FALSE)
```
It takes in as parameters:  
"mu" - means of the prior on the mean response  
"sigma" - standard deviations of the priors on the response  
"abs" - whether or not to take the absolute difference
